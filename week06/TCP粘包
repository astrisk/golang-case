# TCP粘包

## 什么是TCP粘包和半包

TCP粘包问题是指当发送两条消息时，比如发送了ABC和DEF，当时接收方收到的消息是ABCD，像这种一次性读取了两条数据的情况叫做粘包。正常情况应该是一条条读取。

TCP半包问题是指当发送的消息是ABC时，接收方收到的是AB和C两条消息，像这种情况叫做半包。

## 为什么会有粘包和半包问题

因为TCP是面向连接的传送协议，TCP传输的数据是以流的形式，而流数据是没有明确的开始结尾边界，所以TCP也没有办法判断流属于一个消息。

- 粘包的主要原因：
  - 发送方没次写入的数据< 套接字缓冲区大小；
  - 接收方读取套接字缓冲区数据不够及时。
- 半包的主要原因
  - 发送方没次写入数据 > 套接字缓冲区大小；
  - 发送的数据大于协议的MTU，因此必须拆包，分多次发送。

## 粘包的处理方式

- fix length处理

固定缓冲区大小，只需要控制服务端和客户端发送和接收字节的长度相同即可。
**虽然这种方式可以解决粘包和半包的问题，但是这种固定缓冲区大小的方式增加了不必要的数据传输，因为当数据小于缓冲区大小时会使用空字符进行填充，这样增加了网络传输的负担。**

- delimiter based处理

基于特殊字符进行分割定界。比如客户端发送过来的数据，每次用'\n'结束。这样服务端就通过特殊字符'\n'就清楚一个流的边界，从而解决粘包和半包问题。

- length field based frame decoder处理

在TCP协议头里面写入每次发送的请求长度。客户端在协议头里面带了数据长度，服务端在接收到请求后，根据协议头里面的数据长度决定接收多少数据，组合成一个完整的消息。